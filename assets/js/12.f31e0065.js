(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{575:function(v,_,t){"use strict";t.r(_);var a=t(12),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"人脑的思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#人脑的思考"}},[v._v("#")]),v._v(" 人脑的思考")]),v._v(" "),t("blockquote",[t("p",[v._v("生活就是做事，就是一件一件的事情叠加，吃饭是事情，睡觉是事情，工作是事情，这样一件件事情累积起来构成生活。")])]),v._v(" "),t("p",[v._v("那么生活中又很多事情需要处理，当然我们是一件一件去做，如果同时有两件事需要做，我们怎么处理呢？大概有以下几种:")]),v._v(" "),t("ul",[t("li",[v._v("紧急重要")]),v._v(" "),t("li",[v._v("紧急不重要")]),v._v(" "),t("li",[v._v("不紧急重要")]),v._v(" "),t("li",[v._v("不紧急不重要")])]),v._v(" "),t("p",[v._v("说白了，我们给他们分了个等级，更准确的说，是分了次序，哪些需要优先做的，哪些可以延迟做的，这是人脑的思考，我们来看下电脑是怎么思考的。")]),v._v(" "),t("h2",{attrs:{id:"电脑的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#电脑的处理"}},[v._v("#")]),v._v(" 电脑的处理")]),v._v(" "),t("h3",{attrs:{id:"先来先服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#先来先服务"}},[v._v("#")]),v._v(" 先来先服务")]),v._v(" "),t("blockquote",[t("p",[v._v("哪个先来，先做哪个")])]),v._v(" "),t("p",[v._v("这样有个好处，就是公平，但是缺点很明显，比如A先到，我们就开始做A，做了3天还没做完，后面的B等的不耐烦了，B说: 我特么就屁大点事，几分钟就能搞完，你让我等了3天，这是人干的事吗。")]),v._v(" "),t("p",[v._v("于是问题就出现了，如果前面的事情需要很长时间，而后面的事情需要很短的时间，此时前面的一时半会儿做不完，后面的又等的着急，所以，不可取！")]),v._v(" "),t("h3",{attrs:{id:"短作业优先"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短作业优先"}},[v._v("#")]),v._v(" 短作业优先")]),v._v(" "),t("blockquote",[t("p",[v._v("哪个需要的时间少，先做哪个")])]),v._v(" "),t("p",[v._v("为了解决上面"),t("strong",[v._v("先来先服务")]),v._v("引起的问题，我们采取"),t("strong",[v._v("短作业优先")]),v._v("，比如此时A先到，但是做完A需要3天，此时B来了，B只需要1个小时就能做完，那么我们就先做B，这样就能保证尽快完成尽可能多的事，但是问题又出现了，B完了做C，C完了做D，因为它们都需要很短的时间，而A迟迟得不到执行，\n更重要的是: A是老板提的事情! 3天后，老板发话了: 怎么还没完？怎么办呢，我们可以采用"),t("strong",[v._v("优先权算法")]),v._v("。")]),v._v(" "),t("h3",{attrs:{id:"高优先权优先"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高优先权优先"}},[v._v("#")]),v._v(" 高优先权优先")]),v._v(" "),t("blockquote",[t("p",[v._v("哪个的优先级高，先做哪个")])]),v._v(" "),t("p",[v._v("同上，A一直得不到执行，但是又是比较重要的，我们可以给每个事情加一个"),t("strong",[v._v("重要程度指数")]),v._v("，称之为"),t("strong",[v._v("优先级")]),v._v("，优先级高的，可以优先执行，那么优先级高的就先做完，但是又有问题了，如果A、B、C优先级一样呢，咋整？那我们就看A、B、C谁需要的时间短，也就是说:\n优先级相同的，我们按照"),t("strong",[v._v("短作业优先")]),v._v("，那如果需要的时间也一样呢，那我们就看谁先来的，也就是"),t("strong",[v._v("先来先服务")]),v._v("，那如果一块到呢？WTF！")]),v._v(" "),t("h3",{attrs:{id:"时间片轮转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间片轮转"}},[v._v("#")]),v._v(" 时间片轮转")]),v._v(" "),t("blockquote",[t("p",[v._v("A做一部分接着做B，B做一部分接着做C，C做一部分接着做D...依次类推")])]),v._v(" "),t("p",[v._v("同上，如果两个任务A和B，优先级相同，需要的时间相同，一起到的，咋整！我们可以这样: 先做一会儿A，再做一会儿B，然后再做一会儿A，再做一会儿B，这样给A、B的感觉是: 他一直在给我做事，没有拖延我们，我们很满意！这就叫做"),t("strong",[v._v("时间片轮转")]),v._v("。\n这样可以用来模拟多个人: 比如 我同时开两个微信，同时跟俩人聊天，虽然我是一个人，而且同一时刻也只能给一个微信发消息，但是只要我切换的够快，对面两个微信好友都认为我一直在跟他一个人聊天！这就叫做"),t("strong",[v._v("宏观上并行，微观上串行")]),v._v("。这也是计算机能同时打开多个应用的原理。")]),v._v(" "),t("h3",{attrs:{id:"高响应比优先"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高响应比优先"}},[v._v("#")]),v._v(" 高响应比优先")]),v._v(" "),t("blockquote",[t("p",[v._v("先做能立刻做的")])]),v._v(" "),t("p",[v._v("嘛意思呢，举个例子: A需要立刻做，但是做A的时候需要一些东西，这些东西现在没有，我只能等这些东西到了再做，那我不能干等着吧，而B不需要等什么东西，可以立刻开始，于是我就先做B。这就叫做"),t("strong",[v._v("高响应比优先")]),v._v("，所谓响应: 可以理解为做事的效率，如果等A的东西，那么就是没做事，一天12个小时，\n你有6个小时在等A的东西，那么你的效率就是6除以12，也就是50%；如果你没等A的需要的东西，一直在做B，那么你就是一天都在做事，效率就是100%，老板见你这么高效，肯定加薪！")]),v._v(" "),t("p",[v._v("电脑的思想，大概就这么几种，至于选择哪种方式，还得看场合去选择。")])])}),[],!1,null,null,null);_.default=s.exports}}]);